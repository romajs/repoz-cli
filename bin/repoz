#!/usr/bin/env node

// 'use strict';

var program = require('commander');
var prompt = require('prompt');
var q = require('q');
var repoz = require('../lib/repoz');

parseArgs(process.argv).then(function(program) {

	// console.log('program: ', program);

	askCredentials().then(function(credentials) {

		var r = repoz(program.project, credentials.username, credentials.password);
		var command = r[program.command];
		// console.log('command: ', command);

		if(command === undefined) {
			console.info('Command "%s" not found.', program.command);
			process.exit(1);
		}

		var args = [
			program.path,
			program.filepath,
		];

		command.apply(this, args).then(function() {
			console.info('Done.');
			// process.exit(0);
		}).catch(function(err) {
			console.error('Failed. ' + err);
			// process.exit(1);
		});

	});

});

function parseArgs(argv) {

	var d = q.defer();

	program.version('0.0.1')
		.option('-p, --project [project]', 'Project')
		.arguments('<command> [path] [filepath]')
		.action(function (command, path, filepath) {
			d.resolve({
				project: program.project,
				command: command,
				path: path,
				filepath: filepath,
			});
		})
		.parse(argv);

	return d.promise;
}

function askCredentials() {

	var d = q.defer();

	var properties = [
		{ name: 'username' },
		{ name: 'password', hidden: true }
	];

	prompt.start();

	prompt.get(properties, function (err, credentials) {
		if (err) {
			d.reject(err);
		} else {
			d.resolve(credentials);
		}
	});

	return d.promise;
}